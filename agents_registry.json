{
  "AGENT_REGISTRY": {
    "x": {
      "crawlers": {
        "x-search": {
          "id": "x-search",
          "description": "Searches for tweets based on keywords, hashtags, or users",
          "parameters": {
            "keywords": {
              "type": "string[]",
              "description": "Keywords or phrases to search for",
              "required": true
            },
            "max_results": {
              "type": "number",
              "description": "Maximum number of results to return",
              "required": false,
              "default": 50
            },
            "include_retweets": {
              "type": "boolean",
              "description": "Whether to include retweets in the results",
              "required": false,
              "default": false
            }
          },
          "returns": "TweetCollection"
        },
        "x-user-info": {
          "id": "x-user-info",
          "description": "Retrieves information about x users",
          "parameters": {
            "usernames": {
              "type": "string[]", 
              "description": "x usernames to fetch information for",
              "required": true
            }
          },
          "returns": "UserCollection"
        }
      },
      "analysis": {
        "x-analyze-engagement": {
          "id": "x-analyze-engagement",
          "description": "Analyzes engagement patterns for tweets",
          "parameters": {
            "tweet_data": {
              "type": "TweetCollection",
              "description": "Collection of tweets to analyze",
              "required": true
            },
            "metrics": {
              "type": "string[]",
              "description": "Engagement metrics to analyze",
              "required": false,
              "default": ["likes", "retweets", "replies"]
            }
          },
          "returns": "EngagementAnalysis"
        },
        "x-sentiment-analysis": {
          "id": "x-sentiment-analysis",
          "description": "Analyzes sentiment of tweets",
          "parameters": {
            "tweet_data": {
              "type": "TweetCollection",
              "description": "Collection of tweets to analyze",
              "required": true
            }
          },
          "returns": "SentimentAnalysis"
        }
      },
      "interactive": {
        "x-post-tweet": {
          "id": "x-post-tweet",
          "description": "Post a new tweet to X (x)",
          "parameters": {
            "message": {
              "type": "string",
              "description": "The text content of the tweet",
              "required": true
            },
            "media_urls": {
              "type": "string[]",
              "description": "URLs of media to attach to the tweet",
              "required": false
            }
          },
          "returns": "PostResult"
        },
        "x-send-dm": {
          "id": "x-send-dm",
          "description": "Send a direct message to a user on X (x)",
          "parameters": {
            "recipient_id": {
              "type": "string",
              "description": "The user ID of the recipient",
              "required": true
            },
            "message": {
              "type": "string",
              "description": "The text content of the direct message",
              "required": true
            }
          },
          "returns": "MessageResult"
        },
        "x-reply-to-tweet": {
          "id": "x-reply-to-tweet",
          "description": "Reply to an existing tweet on X (x)",
          "parameters": {
            "tweet_id": {
              "type": "string",
              "description": "The ID of the tweet to reply to",
              "required": true
            },
            "message": {
              "type": "string",
              "description": "The text content of the reply",
              "required": true
            }
          },
          "returns": "PostResult"
        }
      }
    },
    "tiktok": {
      "crawlers": {
        "tiktok-search-trending": {
          "id": "tiktok-search-trending",
          "description": "Searches for trending content on TikTok",
          "parameters": {
            "keywords": {
              "type": "string[]",
              "description": "Keywords to search for",
              "required": false
            },
            "contentType": {
              "type": "string",
              "description": "Type of content to search for",
              "required": false,
              "default": "video",
              "enum": ["video", "image", "text"]
            },
            "maxResults": {
              "type": "number",
              "description": "Maximum number of results",
              "required": false,
              "default": 20
            }
          },
          "returns": "ContentCollection"
        },
        "tiktok-find-influencers": {
          "id": "tiktok-find-influencers",
          "description": "Finds influencers in a specific niche",
          "parameters": {
            "niche": {
              "type": "string",
              "description": "The niche or industry to find influencers in",
              "required": true
            },
            "followerCountMin": {
              "type": "number",
              "description": "Minimum follower count",
              "required": false,
              "default": 10000
            },
            "engagementRateMin": {
              "type": "number",
              "description": "Minimum engagement rate (0-1)",
              "required": false,
              "default": 0.02
            }
          },
          "returns": "InfluencerCollection"
        }
      },
      "analysis": {
        "tiktok-analyze-engagement": {
          "id": "tiktok-analyze-engagement",
          "description": "Analyzes engagement patterns for content",
          "parameters": {
            "contentData": {
              "type": "ContentCollection",
              "description": "Collection of content to analyze",
              "required": true
            },
            "metrics": {
              "type": "string[]",
              "description": "Metrics to analyze",
              "required": false,
              "default": ["views", "likes", "comments", "shares"]
            }
          },
          "returns": "EngagementAnalysis"
        },
        "tiktok-audience-insights": {
          "id": "tiktok-audience-insights",
          "description": "Provides insights about an audience",
          "parameters": {
            "influencerData": {
              "type": "InfluencerCollection",
              "description": "Collection of influencers to analyze",
              "required": true
            },
            "demographicsRequired": {
              "type": "boolean",
              "description": "Whether to include demographic data",
              "required": false,
              "default": true
            }
          },
          "returns": "AudienceInsights"
        }
      },
      "interactive": {
        "tiktok-post-content": {
          "id": "tiktok-post-content",
          "description": "Posts content to TikTok",
          "parameters": {
            "videoUrl": {
              "type": "string",
              "description": "URL of the video to post",
              "required": true
            },
            "caption": {
              "type": "string",
              "description": "Caption for the video",
              "required": true
            },
            "tags": {
              "type": "string[]",
              "description": "Hashtags to include",
              "required": false
            }
          },
          "returns": "PostResult"
        },
        "tiktok-comment": {
          "id": "tiktok-comment",
          "description": "Comments on TikTok videos",
          "parameters": {
            "videoIds": {
              "type": "string[]",
              "description": "IDs of videos to comment on",
              "required": true
            },
            "comments": {
              "type": "string[]",
              "description": "Comments to post",
              "required": true
            }
          },
          "returns": "CommentResults"
        }
      }
    },
    "instagram": {
      "crawlers": {
        "instagram-search": {
          "id": "instagram-search",
          "description": "Searches for content on Instagram",
          "parameters": {
            "keywords": {
              "type": "string[]",
              "description": "Keywords to search for",
              "required": true
            },
            "contentType": {
              "type": "string",
              "description": "Type of content to search for",
              "required": false,
              "default": "posts",
              "enum": ["posts", "reels", "stories"]
            }
          },
          "returns": "ContentCollection"
        },
        "instagram-profile-data": {
          "id": "instagram-profile-data",
          "description": "Retrieves profile data for Instagram users",
          "parameters": {
            "usernames": {
              "type": "string[]",
              "description": "Instagram usernames to fetch data for",
              "required": true
            }
          },
          "returns": "ProfileCollection"
        }
      },
      "analysis": {
        "instagram-analyze-hashtags": {
          "id": "instagram-analyze-hashtags",
          "description": "Analyzes hashtag performance on Instagram",
          "parameters": {
            "hashtags": {
              "type": "string[]",
              "description": "Hashtags to analyze",
              "required": true
            },
            "timeframe": {
              "type": "string",
              "description": "Timeframe for analysis",
              "required": false,
              "default": "30d",
              "enum": ["7d", "30d", "90d"]
            }
          },
          "returns": "HashtagAnalysis"
        }
      },
      "interactive": {
        "instagram-post": {
          "id": "instagram-post",
          "description": "Posts content to Instagram",
          "parameters": {
            "mediaUrl": {
              "type": "string",
              "description": "URL of media to post",
              "required": true
            },
            "caption": {
              "type": "string",
              "description": "Caption for the post",
              "required": true
            },
            "hashtags": {
              "type": "string[]",
              "description": "Hashtags to include",
              "required": false
            }
          },
          "returns": "PostResult"
        }
      }
    },
    "linkedin": {
      "crawlers": {
        "linkedin-search-people": {
          "id": "linkedin-search-people",
          "description": "Searches for people on LinkedIn",
          "parameters": {
            "keywords": {
              "type": "string[]",
              "description": "Keywords to search for",
              "required": true
            },
            "location": {
              "type": "string",
              "description": "Location to search in",
              "required": false
            },
            "industry": {
              "type": "string",
              "description": "Industry to filter by",
              "required": false
            }
          },
          "returns": "PeopleCollection"
        }
      },
      "analysis": {
        "linkedin-company-analysis": {
          "id": "linkedin-company-analysis",
          "description": "Analyzes LinkedIn company data",
          "parameters": {
            "companyIds": {
              "type": "string[]",
              "description": "LinkedIn company IDs to analyze",
              "required": true
            }
          },
          "returns": "CompanyAnalysis"
        }
      },
      "interactive": {
        "linkedin-post": {
          "id": "linkedin-post",
          "description": "Creates a post on LinkedIn",
          "parameters": {
            "content": {
              "type": "string",
              "description": "Content of the post",
              "required": true
            },
            "visibility": {
              "type": "string",
              "description": "Visibility of the post",
              "required": false,
              "default": "public",
              "enum": ["public", "connections", "private"]
            }
          },
          "returns": "PostResult"
        }
      }
    }
  }
}